version: '3.5'

volumes:
  cloudflared:
  database:
  logs:

networks:
  fleetdm:
    name: fleetdm

services:
  #######################################
  # CLOUDFLARED
  #######################################
  cloudflared:
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./services/cloudflared/Dockerfile
      args:
        CLOUDFLARED_VERSION: ${CLOUDFLARED_VERSION}
    env_file:
      - .env
    restart: unless-stopped
    profiles:
      - tunnel
    volumes:
      - cloudflared:/etc/cloudflared
    networks:
      - fleetdm
  #######################################
  # MYSQL
  #######################################
  mysql:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./services/mysql/Dockerfile
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - database:/var/lib/mysql
    networks:
      - fleetdm
    ports:
      - "3306:3306"
  #######################################
  # REDIS
  #######################################
  redis:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./services/redis/Dockerfile
      args:
        REDIS_VERSION: ${REDIS_VERSION}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - fleetdm
  #######################################
  # FLEET-GUI
  #######################################
  fleet:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./services/fleet/Dockerfile
      args:
        FLEET_VERSION: ${FLEET_VERSION}
        FLEET_MYSQL_USERNAME: ${MYSQL_USER}
        FLEET_MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - logs:/var/log/osquery
    networks:
      - fleetdm
    ports:
      - "443:443"
  #######################################
  # LETSENCRYPT
  #######################################
  letsencrypt:
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./services/letsencrypt/Dockerfile
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./secrets:/secrets
    networks:
      - fleetdm